ARG BASE_IMAGE=ez123/ops-base:alpine34

ARG PIP__ANSIBLE_VER="~=2.7.0"

# #########################################################################
FROM ${BASE_IMAGE} as final

LABEL maintainer="webmaster@kit-ar.com"

RUN \
    echo "===> Updating TLS certificates..."         && \
    apk --update --no-cache add \
            ca-certificates \
            openssl \
    && \
    echo "..."

# RUN \
#     echo "===> Adding Ruby 2.x..."  && \
#     apk --update --no-cache add \
#             ruby \
#         && \
#     echo "..."

# #########################################################################
FROM ${BASE_IMAGE} as int--misc-tools
ARG PIP__ANSIBLE_VER

# From alpine 3.7 onwards, since ansible2+4+ already supports python3,
# we no longer install/support python2 by default.
# Also, we do not pretend pip will be available. Use pip3 instead.

## prob won't be needed since, on of 2020-01-09, pyhelm didn't support helm3
## uncomment if really needed
# ENV PYHELM_PIP3=pyhelm

RUN \
    apk --update --no-cache add \
            python py-pip \
        && \
    \
    echo "===> Configuring Python and PIP..."  && \
    pip2 install --upgrade pip wheel 'setuptools<45.0.0' && \
    pip list && \
    \
    apk --update --no-cache add \
        --virtual build-dependencies \
            py-virtualenv \
            python-dev \
            build-base  \
            openssl-dev \
            libffi-dev \
            libc-dev \
    && \
    pip list &&\
    \
    echo "..."

RUN \
    echo "===> Installing Ansible (via PIP)..." \
    echo "===> Installing ansible and ansible[azure] in separate steps..." \
    echo "===> (https://github.com/ansible/ansible/issues/67255)..." \
    echo "===> Installing azure-cli and ansible[azure] in separate virtuaenv to prevent version conflicts..." \
    echo "===> as of 2020-02-09, we could not find any other option..." \
    echo "===> and it is possible that the way the conflicts were handled will cause issues in the future..." \
    && \
    echo "..."

RUN \
        echo "===> Installing (ansible)..." && \
        virtualenv /venv/ans \
        &&\
        /venv/ans/bin/pip install --no-cache-dir --upgrade pip wheel 'setuptools<45.0.0' &&\
        /venv/ans/bin/pip install --no-cache-dir --upgrade \
            paramiko \
            ansible${PIP__ANSIBLE_VER} \
        && \
        /venv/ans/bin/pip install --no-cache-dir --upgrade \
            ansible[azure]${PIP__ANSIBLE_VER} \
            \
            boto \
            \
            openshift \
            ${PYHELM_PIP3} \
            \
            docker \
            \
            ansible-lint \
            \
        &&\
        echo "..."

# #########################################################################
FROM final

# =========================================================================
# we rely on the intermediate image and the final image being the same;
# the source and target location must be the same as venv relies on hardwired python path
COPY --from=int--misc-tools /venv/ans   /venv/ans

RUN \
    du -hd1 /venv &&\
    \
    echo "..."

ENV PATH="/venv/ans/bin:/venv/az/bin:/venv/aws/bin:/venv/tools/bin:$PATH"
# #########################################################################
# default command: display Ansible version
CMD \
    ansible-playbook --version | head -n 1 && \
    python  --version          | head -n 1 && \
    python3 --version          | head -n 1 && \
    pip  --version             | head -n 1 && \
    pip3 --version             | head -n 1 && \
    node --version             | head -n 1 && \
    ruby --version             | head -n 1 && \
    git  --version             | head -n 1 && \
    az   --version             | head -n 1 && \
    aws  --version             | head -n 1 && \
    docker-compose --version   | head -n 1 && \
    docker         --version   | head -n 1 && \
    helm    version --client   | head -n 1 && \
    kubectl version --client   | head -n 1 && \
    openssl version            | head -n 1
