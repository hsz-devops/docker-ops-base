ARG BASE_IMAGE=alpine:3.4

ARG HELM_VERSION=3.0.3

# #########################################################################
FROM ${BASE_IMAGE} as final

LABEL maintainer="webmaster@kit-ar.com"
ARG DOCKER_VERSION

# golang is not installed in the alpine version

RUN \
    echo "===> Updating TLS certificates..."         && \
    apk --update --no-cache add \
            ca-certificates \
            openssl \
    && \
    echo "..."

RUN \
    echo "===> Adding usefull packages for devops shell-works..."  && \
    apk --update --no-cache add \
            coreutils \
            openssh-client \
            rsync \
            tar \
            make \
            \
            tini \
            \
            file \
            bash \
            # bash-completion \
            less \
            nano \
            \
            curl \
            wget \
            \
            zip \
            xz \
            unrar \
            \
            git \
            \
            mc \
            mosh \
            screen \
            \
            lsscsi \
            \
            htop \
            atop \
            sysstat \
            iftop \
            lsof \
            util-linux \
            mtr \
            groff \
        && \
    \
    sed -i -e "s/bin\/ash/bin\/bash/" /etc/passwd \
    && \
    echo "..."
SHELL ["/bin/bash", "-c"]

RUN \
    echo "===> DB clients..."  && \
    apk --update --no-cache add \
            postgresql-client \
            mysql-client \
        && \
    echo "..."

RUN \
    echo "===> Installing NodeJS 6.x..."  && \
    apk --update --no-cache add \
            nodejs \
    && \
    \
    echo "===> Adding Ruby 2.x..."  && \
    apk --update --no-cache add \
            ruby \
        && \
    echo "..."

RUN \
    echo "===> Adding docker-ssh-exec..."  && \
    curl -L https://github.com/mdsol/docker-ssh-exec/releases/download/v0.5.2/docker-ssh-exec_0.5.2_linux_amd64.tar.gz | \
         tar -xz --strip-components=1 -C /usr/local/bin \
    && \
    echo "..."

RUN \
    echo "===> Adding Docker cli..."  && \
    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz && \
    tar xzvf docker-${DOCKER_VERSION}.tgz --strip 1 \
            -C /usr/local/bin docker/docker \
    && \
    rm docker-${DOCKER_VERSION}.tgz \
    && \
    echo "..."

RUN \
    echo "===> Adding Python runtime..."  && \
    apk --update --no-cache add \
            python py-pip \
            python3 \
        && \
    \
    echo "===> Configuring Python and PIP..."  && \
    pip3 install --upgrade pip wheel setuptools    && \
    pip2 install --upgrade pip wheel 'setuptools<45.0.0' && \
    rm $(which pip) && \
    ln -s $(which pip2) /usr/local/bin/pip && \
    \
    echo Making sure pip is set to python2 && \
    pip --version | grep "python 2\."  && \
    pip list && \
    pip3 list && \
    \
    echo "===> Cleaning up ..."  && \
    rm -rf \
        "${HOME}/.cache" \
        /var/cache/apk/* \
        /tmp/*           \
        /var/tmp/*       \
    && \
    echo "..."

# #########################################################################
FROM ${BASE_IMAGE} as int--misc-tools
ARG KUBECTL_VERSION

RUN \
    echo "===> Adding Python runtime..."  && \
    apk --update --no-cache add \
            python py-pip \
        && \
    \
    echo "===> Configuring Python and PIP..."  && \
    pip2 install --upgrade pip wheel 'setuptools<45.0.0' && \
    pip list && \
    \
    apk --update --no-cache add \
        --virtual build-dependencies \
            py-virtualenv \
            python-dev \
            build-base  \
            openssl-dev \
            libffi-dev \
            libc-dev \
    && \
    pip list &&\
    \
    echo "..."

RUN \
    echo "===> Installing (tools)..." && \
        virtualenv /venv/tools \
        &&\
        /venv/tools/bin/pip install --no-cache-dir --upgrade pip wheel 'setuptools<45.0.0' &&\
        /venv/tools/bin/pip install --no-cache-dir \
            docker-compose \
            python-magic \
            s3cmd \
        && \
        echo "..."

RUN \
        echo "===> Installing (azure-cli)..." && \
        apk --update --no-cache add \
            linux-headers \
        &&\
        virtualenv /venv/az \
        &&\
        /venv/az/bin/pip install --no-cache-dir --upgrade pip wheel 'setuptools<45.0.0' &&\
        /venv/az/bin/pip install --no-cache-dir --upgrade \
            azure-cli \
        &&\
        echo "..."

RUN \
        echo "===> Installing (aws-cli)..." && \
        virtualenv /venv/aws \
        &&\
        /venv/aws/bin/pip install --no-cache-dir --upgrade pip wheel 'setuptools<45.0.0' &&\
        /venv/aws/bin/pip install --no-cache-dir --upgrade \
            awscli \
            saw \
    &&\
    \
    echo "..."

# #########################################################################
#FROM alpine/helm:${HELM_VERSION} as int--helm
FROM dtzar/helm-kubectl:${HELM_VERSION} as int--helm-kubectl

# #########################################################################
FROM final

# =========================================================================
COPY --from=int--helm-kubectl /usr/local/bin/helm    /usr/local/bin/helm
COPY --from=int--helm-kubectl /usr/local/bin/kubectl /usr/local/bin/kubectl

# =========================================================================
# we rely on the intermediate image and the final image being the same;
# the source and target location must be the same as venv relies on hardwired python path
COPY --from=int--misc-tools /venv   /venv

RUN \
    du -hd1 /venv &&\
    \
    echo "..."

ENV PATH="/venv/az/bin:/venv/aws/bin:/venv/tools/bin:$PATH"

# #########################################################################
# default command: display installed versions
CMD \
    python  --version          | head -n 1 && \
    python3 --version          | head -n 1 && \
    pip  --version             | head -n 1 && \
    pip3 --version             | head -n 1 && \
    node --version             | head -n 1 && \
    git  --version             | head -n 1 && \
    az   --version             | head -n 1 && \
    aws  --version             | head -n 1 && \
    docker-compose --version   | head -n 1 && \
    docker         --version   | head -n 1 && \
    helm    version --client   | head -n 1 && \
    kubectl version --client   | head -n 1 && \
    openssl version            | head -n 1
