FROM alpine:3.10

MAINTAINER HighSkillz <webdev@highskillz.com>

# golang is not installed in the alpine version

# From alpine 3.7 onwards, since ansible2+4+ already supports python3,
# we no longer install/support python2 by default.
# Also, we do not pretend pip will be available. Use pip3 instead.
#

ENV ANSIBLE_FROM_PIP=1
ENV PIP__ANSIBLE="ansible~=2.8"

RUN \
    echo "===> Updating TLS certificates..."         && \
    apk --update add \
            ca-certificates \
            openssl \
    && \
    \
    echo "===> Adding Python runtime..."  && \
    apk --update add \
            python3 \
        && \
    echo "===> Adding usefull packages for devops shell-works..."  && \
    apk --update add \
            coreutils \
            openssh-client \
            rsync \
            tar \
            make \
            \
            tini \
            \
            file \
            bash \
            bash-completion \
            less \
            nano \
            \
            curl \
            wget \
            \
            zip \
            xz \
            unrar \
            \
            git \
            \
            mc \
            mosh \
            screen \
            \
            lsscsi \
            \
            htop \
            atop \
            sysstat \
            iftop \
            lsof \
            util-linux \
            mtr \
            \
            postgresql-client \
            mysql-client \
            \
            py3-cffi \
        && \
    \
    echo "===> Configuring Python and PIP..."  && \
    pip3 install --upgrade pip setuptools wheel && \
    \
    ( \
      if [ "${ANSIBLE_FROM_PIP}" == "0" ]; then \
        echo " ===> Installing Ansible (from apk)..." \
        && \
        apk --update add \
            ansible \
        ; \
      else \
        echo "===> Installing Ansible (via PIP)..." \
        && \
        apk --update add --virtual build-dependencies \
            python3-dev \
            build-base  \
            openssl-dev \
            libffi-dev \
        && \
        pip3 install --upgrade \
            boto \
            packaging \
            openshift \
            grpcio \
            \
            # Make sure we can run ansible's docker scripts
            docker \
            docker-compose \
        && \
        pip3 install --upgrade \
            ${PIP__ANSIBLE} \
            ansible-lint \
            \
            ansible[azure] \
            azure-cli \
            \
            awscli \
            s3cmd \
            \
            python-magic \
        && \
        apk del build-dependencies \
        ; \
      fi \
    ) \
    && \
    \
    echo "===> Installing NodeJS 10.16+..."  && \
    apk --update add \
            nodejs \
    && \
    \
    echo "===> Adding Ruby 2.5.7+..."  && \
    apk --update add \
            ruby \
    && \
    echo "===> Adding docker-ssh-exec..."  && \
    curl -L https://github.com/mdsol/docker-ssh-exec/releases/download/v0.5.2/docker-ssh-exec_0.5.2_linux_amd64.tar.gz | \
         tar -xz --strip-components=1 -C /usr/local/bin \
    && \
    \
    echo "===> Cleaning up ..."  && \
    rm -rf \
      "${HOME}/.cache" \
       /var/cache/apk/* \
       /tmp/*               \
       /var/tmp/*           \
    && \
    \
    echo "OK!"

SHELL ["/bin/bash", "-c"]

# default command: display Ansible version
CMD \
    ansible-playbook --version             && \
    python3 --version          | head -n 1 && \
    pip3 --version             | head -n 1 && \
    node --version             | head -n 1 && \
    ruby --version             | head -n 1 && \
    git  --version             | head -n 1 && \
    az   --version             | head -n 1 && \
    aws  --version             | head -n 1 && \
    docker-compose --version   | head -n 1 && \
    openssl version            | head -n 1
