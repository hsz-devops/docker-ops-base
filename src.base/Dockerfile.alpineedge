FROM alpine:edge

MAINTAINER HighSkillz <webdev@highskillz.com>

# golang is not installed in the alpine version

# From alpine 3.7 onwards, since ansible2+4+ already supports python3,
# we no longer install/support python2 by default.
# Also, we do not pretend pip will be available. Use pip3 instead.
#

ENV ANSIBLE_FROM_PIP=1
ENV PIP__ANSIBLE_VER=""

RUN \
    echo "===> Updating TLS certificates..."         && \
    apk --update --no-cache add \
            ca-certificates \
            openssl \
        && \
    echo "..."

RUN \
    echo "===> Adding usefull packages for devops shell-works..."  && \
    apk --update --no-cache add \
            coreutils \
            openssh-client \
            rsync \
            tar \
            make \
            \
            tini \
            \
            file \
            bash \
            bash-completion \
            less \
            nano \
            jq \
            \
            curl \
            wget \
            \
            virt-what \
            zip \
            xz \
            unrar \
            \
            git \
            \
            mc \
            mosh \
            screen \
            dos2unix \
            \
            lsscsi \
            \
            iotop \
            htop \
            atop \
            sysstat \
            iftop \
            bmon \
            \
            iptraf-ng \
            nethogs \
            lsof \
            util-linux \
            mtr \
            groff \
        && \
    echo "..."

RUN \
    echo "===> Adding Python runtime..."  && \
    apk --update --no-cache add \
            python3 \
            py3-cffi \
        && \
    \
    echo "===> Configuring Python and PIP..."  && \
    pip3 install --upgrade pip setuptools wheel && \
    echo "..."

RUN \
    echo "===> DB clients..."  && \
    apk --update --no-cache add \
            postgresql-client \
            mysql-client \
        && \
    echo "..."

RUN \
    echo "===> Installing NodeJS 12.14+..."  && \
    apk --update --no-cache add \
            nodejs npm yarn \
            npm \
            yarn \
        && \
    echo "..."

RUN \
    echo "===> Adding Ruby 2.6.5+..."  && \
    apk --update --no-cache add \
            ruby \
        && \
    echo "..."

RUN \
    echo "===> Adding docker-ssh-exec..."  && \
    curl -L https://github.com/mdsol/docker-ssh-exec/releases/download/v0.5.2/docker-ssh-exec_0.5.2_linux_amd64.tar.gz | \
         tar -xz --strip-components=1 -C /usr/local/bin \
    && \
    echo "..."

RUN \
    if [ "${ANSIBLE_FROM_PIP}" == "0" ]; then \
        echo " ===> Installing Ansible (from apk)..." \
        && \
        apk --update --no-cache add \
            ansible \
        ; \
    else \
        echo "===> Installing Ansible (via PIP)..." \
        && \
        apk --update --no-cache add \
            --virtual build-dependencies \
                python3-dev \
                build-base  \
                openssl-dev \
                libffi-dev \
        && \
            pip3 install --upgrade --upgrade-strategy eager \
                boto \
                packaging \
                openshift \
                grpcio \
                \
                # Make sure we can run ansible's docker scripts
                docker \
                docker-compose \
                \
                ansible${PIP__ANSIBLE_VER} \
                ansible-lint \
                \
                ansible[azure]${PIP__ANSIBLE_VER} \
                azure-cli \
                \
                awscli \
                s3cmd \
                \
                python-magic \
            && \
        apk del --update --no-cache build-dependencies \
        ; \
    fi \
    && \
    \
    echo "===> Cleaning up ..."  && \
    rm -rf \
      "${HOME}/.cache" \
       /var/cache/apk/* \
       /tmp/*               \
       /var/tmp/*           \
    && \
    \
    sed -i -e "s/bin\/ash/bin\/bash/" /etc/passwd \
    && \
    \
    echo "OK!"

SHELL ["/bin/bash", "-c"]

# default command: display Ansible version
CMD \
    ansible-playbook --version             && \
    python3 --version          | head -n 1 && \
    pip3 --version             | head -n 1 && \
    node --version             | head -n 1 && \
    ruby --version             | head -n 1 && \
    git  --version             | head -n 1 && \
    az   --version             | head -n 1 && \
    aws  --version             | head -n 1 && \
    docker-compose --version   | head -n 1 && \
    openssl version            | head -n 1
